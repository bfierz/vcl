CMAKE_MINIMUM_REQUIRED(VERSION 2.8.0)

PROJECT(VisualComputingLibrary)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
INCLUDE(cmake/VCLConfig.cmake)

# Configure all projects
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

# Add the externals
SUBDIRS(externals/fmtlib)
#SET_TARGET_PROPERTIES(fmt PROPERTIES FOLDER 3rd-party)
SUBDIRS(externals/gsl)
SET(GSL_TEST OFF CACHE BOOL "" FORCE)

SUBDIRS(externals/json)
SET(BuildTests OFF CACHE BOOL "" FORCE)

# The libraries
SUBDIRS(libs)

# Benchmarks
OPTION(VCL_BUILD_BENCHMARKS "Build the benchmarks" ON)
IF (VCL_BUILD_BENCHMARKS)
	SUBDIRS(externals/gbenchmark)
	SET(BENCHMARK_ENABLE_TESTING OFF CACHE BOOL "" FORCE)
	#SET_TARGET_PROPERTIES(benchmark PROPERTIES FOLDER 3rd-party)
	SUBDIRS(benchmarks)
ENDIF (VCL_BUILD_BENCHMARKS)

# Examples
OPTION(VCL_BUILD_EXAMPLES "Build the examples" ON)
IF (VCL_BUILD_EXAMPLES)
	SUBDIRS(examples)
ENDIF (VCL_BUILD_EXAMPLES)

# Tools
OPTION(VCL_BUILD_TOOLS "Build the tools" ON)
IF (VCL_BUILD_TOOLS)
	SUBDIRS(tools)
ENDIF (VCL_BUILD_TOOLS)

# Unit tests
OPTION(VCL_BUILD_TESTS "Build the unit tests" OFF)
IF (VCL_BUILD_TESTS)
	SUBDIRS(externals/googletest)
	SET(BUILD_GTEST ON CACHE BOOL "" FORCE)
	SET(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
	
	
	#SET_TARGET_PROPERTIES(gtest PROPERTIES FOLDER 3rd-party)
	#SET_TARGET_PROPERTIES(gtest_main PROPERTIES FOLDER 3rd-party)
	#SET_TARGET_PROPERTIES(gmock PROPERTIES FOLDER 3rd-party)
	#SET_TARGET_PROPERTIES(gmock_main PROPERTIES FOLDER 3rd-party)

	SUBDIRS(tests)
ENDIF (VCL_BUILD_TESTS)
