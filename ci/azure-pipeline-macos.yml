# Job template for MacOS builds
# Required job variables:
# - buildConfig: 'Debug'
# - configCodeCoverage: 'off'
# - configVectorization: 'SSE 2'

steps:
- script: |
    # Install lxml for python
    sudo easy_install pip
    python -m pip install -U lxml --user
  displayName: 'Prepare Environment'

# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/cmake
- task: CMake@1
  inputs:
    workingDirectory: 'build'
    cmakeArgs: -DCMAKE_BUILD_TYPE=$(buildConfig) -DVCL_CODE_COVERAGE:BOOL=$(configCodeCoverage) -DVCL_BUILD_BENCHMARKS:BOOL=off -DVCL_BUILD_TESTS:BOOL=on -DVCL_BUILD_TOOLS:BOOL=off -DVCL_BUILD_EXAMPLES:BOOL=off -DVCL_VECTORIZE:STRING="$(configVectorization)" ..

- script: |
    export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
    cmake --build build --config $(buildConfig) --target vcl.core.test
    cmake --build build --config $(buildConfig) --target vcl.components.test
    cmake --build build --config $(buildConfig) --target vcl.geometry.test
    cmake --build build --config $(buildConfig) --target vcl.math.test
  displayName: 'Build'
  continueOnError: false

- script: |
    cmake --build build --config $(buildConfig) --target vcl.test
    runTestSuccess=$?
    # Convert ctest output to junit-format
    # http://alexott.blogspot.com/2012/03/jenkins-cmakectest.html
    pushd build/src/tests
    if [ -f Testing/TAG ] ; then
      python ../../../ci/ctest2junit.py . ../../../ci/ctest2junit.xsl > JUnitResults.xml
      if [ ! -f JUnitResults.xml ]; then
        echo '##vso[task.complete result=Failed;]FAILED'
        exit 1
      fi
    fi
    popd
    if [ $runTestSuccess -ne 0 ]; then
      echo '##vso[task.complete result=SucceededWithIssues;]DONE'
    else
      # https://github.com/Microsoft/azure-pipelines-tasks/blob/master/docs/authoring/commands.md
      echo '##vso[task.complete result=Succeeded;]DONE'
    fi
  displayName: 'Run Unit Tests'

# Publish unit test results
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-test-results
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit
    testResultsFiles: 'build/src/tests/**/JUnitResults.xml'
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    mergeTestResults: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    #publishRunAttachments: true # Optional
  displayName: 'Publish Test Results'
  condition: succeeded()
