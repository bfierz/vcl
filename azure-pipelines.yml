trigger:
  - master

jobs:
  - job: Linux
    strategy:
      matrix:
        Debug_SSE2:
          buildConfig: 'Debug'
          configVectorization: 'SSE 2'
          configCodeCoverage: 'on'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'on'
        Debug_AVX:
          buildConfig: 'Debug'
          configVectorization: 'AVX'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'on'
        Release_AVX:
          buildConfig: 'Release'
          configVectorization: 'AVX'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'on'
        Release_AVX2:
          buildConfig: 'Release'
          configVectorization: 'AVX 2'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'on'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: ci/azure-pipeline-generic.yml
  - job: Linux_ARM
    strategy:
      matrix:
        Debug_NEON:
          buildTargetArch: 'arm'
          buildConfig: 'Debug'
          configVectorization: 'NEON'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'off'
          configGraphicsEGL: 'off'
        Release_NEON:
          buildTargetArch: 'arm'
          buildConfig: 'Release'
          configVectorization: 'NEON'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'off'
          configGraphicsEGL: 'off'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: ci/azure-pipeline-generic.yml
  - job: Linux_ARM64
    strategy:
      matrix:
        Debug_NEON:
          buildTargetArch: 'aarch64'
          buildConfig: 'Debug'
          configVectorization: 'NEON'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'off'
          configGraphicsEGL: 'off'
        Release_NEON:
          buildTargetArch: 'aarch64'
          buildConfig: 'Release'
          configVectorization: 'NEON'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'off'
          configGraphicsEGL: 'off'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
      - template: ci/azure-pipeline-generic.yml
  - job: MacOS
    strategy:
      matrix:
        Debug_SSE2:
          buildConfig: 'Debug'
          configVectorization: 'SSE 2'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'off'
          configGraphicsEGL: 'off'
        Release_SSE2:
          buildConfig: 'Release'
          configVectorization: 'SSE 2'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'off'
          configGraphicsOpenGL: 'off'
          configGraphicsEGL: 'off'
    pool:
      vmImage: 'macos-latest'
    steps:
      - template: ci/azure-pipeline-generic.yml
  - job: Windows
    strategy:
      matrix:
        Debug_SSE2:
          buildConfig: 'Debug'
          configVectorization: 'SSE 2'
          configCodeCoverage: 'on'
          configGraphicsD3D12: 'on'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'off'
        Debug_AVX:
          buildConfig: 'Debug'
          configVectorization: 'AVX'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'on'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'off'
        Release_AVX:
          buildConfig: 'Release'
          configVectorization: 'AVX'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'on'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'off'
        Release_AVX2:
          buildConfig: 'Release'
          configVectorization: 'AVX 2'
          configCodeCoverage: 'off'
          configGraphicsD3D12: 'on'
          configGraphicsOpenGL: 'on'
          configGraphicsEGL: 'off'
    pool:
      vmImage: 'windows-2019'
    steps:
      - template: ci/azure-pipeline-generic.yml
